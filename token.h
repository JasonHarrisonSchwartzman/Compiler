#ifndef TOKEN_H
#define TOKEN_H
typedef enum token_t{
	I_0 = 0,
	I_1 = 1,
	I_2 = 2,
	I_3 = 3,
	I_4 = 4,
	I_5 = 5,
	I_6 = 6,
	I_7 = 7,
	I_8 = 8,
	I_9 = 9,
	I_10 = 10,
	I_11 = 11,
	I_12 = 12,
	I_13 = 13,
	I_14 = 14,
	I_15 = 15,
	I_16 = 16,
	I_17 = 17,
	I_18 = 18,
	I_19 = 19,
	I_20 = 20,
	I_21 = 21,
	I_22 = 22,
	I_23 = 23,
	TOKEN_NUM = 24,
	TOKEN_ID = 25,
	TOKEN_PLUS = 26,
	TOKEN_MINUS = 27,
	TOKEN_ASSIGN = 28,
	TOKEN_SEMICOLON = 29,
	TOKEN_INT = 30,
	TOKEN_LONG = 31,
	TOKEN_DOLLAR = 32,
	TOKEN_IF = 33,
	TOKEN_ELSE = 34,
	TOKEN_FOR = 35,
	TOKEN_WHILE = 36,
	TOKEN_DOUBLE = 37,
	TOKEN_CHAR = 38,
	TOKEN_SHORT = 39,
	TOKEN_SIGNED = 40,
	TOKEN_UNSIGNED = 41,
	TOKEN_RETURN = 42,
	TOKEN_BREAK = 43,
	TOKEN_CONTINUE = 44,
	TOKEN_LEFTBRACKET = 45,
	TOKEN_RIGHTBRACKET = 46,
	TOKEN_LEFTPAREN = 47,
	TOKEN_RIGHTPAREN = 48,
	TOKEN_LEFTCURLY = 49,
	TOKEN_RIGHTCURLY = 50,
	TOKEN_EQUAL = 51,
	TOKEN_LESSEQUAL = 52,
	TOKEN_GREATEQUAL = 53,
	TOKEN_GREAT = 54,
	TOKEN_LESS = 55,
	TOKEN_AND = 56,
	TOKEN_OR = 57,
	TOKEN_NOT = 58,
	TOKEN_MULT = 59,
	TOKEN_DIV = 60,
	TOKEN_MOD = 61,
	TOKEN_TILDE = 62,
	TOKEN_AT = 63,
	TOKEN_COMMA = 64,
	TOKEN_BITWISEAND = 65,
	TOKEN_BITWISEOR = 66,
	TOKEN_BITWISEXOR = 67,
	TOKEN_CHARCONST = 68,
	TOKEN_STRINGCONST = 69,
	TOKEN_QUESTIONMARK = 70,
	TOKEN_EOF = 48,
	TOKEN_WHITESPACE = 49,
	VAR_L = 50,
	VAR_D = 51,
	VAR_S = 52,
	VAR_T = 53,
	VAR_E = 54,
	VAR_O = 55,
	VAR_X = 56,
	VAR_P = 57,
	VAR_ERROR = 58
} token_t;
#endif
